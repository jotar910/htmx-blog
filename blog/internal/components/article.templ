package components

import "github.com/jotar910/htmx-templ/internal/models"

type ArticleOption struct {
	Area      string
	Component templ.Component
}

script loadArticle() {
    console.log('joao test');
}

func filter[T any](values []T, by func(v T) bool) []T {
	var res = make([]T, 0)
	for _, v := range values {
		if by(v) {
			res = append(res, v)
		}
	}
	return res
}

func byArea(area string) func(o ArticleOption) bool {
	return func(o ArticleOption) bool { return o.Area == area }
}

templ ArticleDetails(article *models.Article, options ...ArticleOption) {
	<header class="flex flex-col gap-10 mt-10 empty:hidden">
		for _, option := range filter(options, byArea("header")) {
			<div class="container mx-auto">
				{! option.Component }
			</div>
		}
	</header>
	<div class="relative flex gap-10 py-10 container-grid">
		<main class="flex container mx-auto">
			@articleDetailsContent(article)
			@articleDetailsAsideContainer(filter(options, byArea("aside")))
		</main>
	</div>
	<footer class="flex flex-col gap-10 mb-10 empty:hidden">
		for _, option := range filter(options, byArea("footer")) {
			<section class="container mx-auto">
				{! option.Component }
			</section>
		}
	</footer>
}

templ articleDetailsContent(article *models.Article) {
	<section>
		<h1 class="mb-10 text-3xl font-semibold font-heading">{ article.Title }</h1>
		<div is="blog-post" class="prose prose-headings:font-heading prose-headings:font-semibold max-w-none" data-post={ article.Filename } onload={ loadArticle() }>
			{! rawHTML(mdToUnsafeHTML(readArticle(article.Filename))) }
		</div>
	</section>
}

templ articleDetailsAsideContainer(options []ArticleOption) {
	<hr class="hidden lg:block h-full min-h-[1em] w-px mx-6 self-stretch bg-gradient-to-tr from-transparent via-neutral-500 to-transparent opacity-20 dark:opacity-100"/>
	if len(options) > 0 {
		<aside class="hidden lg:flex flex-col gap-10">
			for _, option := range options {
				<article>
					{! option.Component }
				</article>
			}
		</aside>
	}
}
